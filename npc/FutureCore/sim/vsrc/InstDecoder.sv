// Generated by CIRCT firtool-1.44.0
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module InstDecoder(	// @[<stdin>:15:10]
  input  [31:0] io_inst,	// @[FutureCore/src/main/scala/futurecore/frontend/InstDecoder.scala:37:14]
  output [4:0]  io_rs1,	// @[FutureCore/src/main/scala/futurecore/frontend/InstDecoder.scala:37:14]
                io_rs2,	// @[FutureCore/src/main/scala/futurecore/frontend/InstDecoder.scala:37:14]
                io_rd,	// @[FutureCore/src/main/scala/futurecore/frontend/InstDecoder.scala:37:14]
  output        io_writeEnable,	// @[FutureCore/src/main/scala/futurecore/frontend/InstDecoder.scala:37:14]
                io_isImmidiate,	// @[FutureCore/src/main/scala/futurecore/frontend/InstDecoder.scala:37:14]
                io_isEbreak	// @[FutureCore/src/main/scala/futurecore/frontend/InstDecoder.scala:37:14]
);

  wire _GEN = io_inst[6:0] == 7'h13;	// @[FutureCore/src/main/scala/futurecore/frontend/InstDecoder.scala:49:{17,25}]
  assign io_rs1 = io_inst[19:15];	// @[<stdin>:15:10, FutureCore/src/main/scala/futurecore/frontend/InstDecoder.scala:39:20]
  assign io_rs2 = io_inst[24:20];	// @[<stdin>:15:10, FutureCore/src/main/scala/futurecore/frontend/InstDecoder.scala:40:20]
  assign io_rd = io_inst[11:7];	// @[<stdin>:15:10, FutureCore/src/main/scala/futurecore/frontend/InstDecoder.scala:41:20]
  assign io_writeEnable = _GEN;	// @[<stdin>:15:10, FutureCore/src/main/scala/futurecore/frontend/InstDecoder.scala:49:25]
  assign io_isImmidiate = _GEN;	// @[<stdin>:15:10, FutureCore/src/main/scala/futurecore/frontend/InstDecoder.scala:49:25]
  assign io_isEbreak = ~_GEN & io_inst[6:0] == 7'h73 & io_inst[20];	// @[<stdin>:15:10, FutureCore/src/main/scala/futurecore/frontend/InstDecoder.scala:46:18, :49:{17,25}, :55:33]
endmodule

